<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Add Route</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 0;
      padding: 0;
      background-color: #f8f9fa;
      display: flex;
      justify-content: center;
      align-items: center;
      min-height: 100vh;
    }

    .form-container {
      background: #fff;
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
      max-width: 500px;
      width: 100%;
    }

    .form-container h1 {
      text-align: center;
      margin-bottom: 20px;
      font-size: 24px;
      color: #333;
    }

    .form-group {
      margin-bottom: 15px;
    }

    .form-group label {
      display: block;
      margin-bottom: 5px;
      font-weight: bold;
      color: #333;
    }

    .form-group input,
    .form-group select {
      width: 100%;
      padding: 8px;
      font-size: 16px;
      border: 1px solid #ccc;
      border-radius: 4px;
      box-sizing: border-box;
    }

    .form-group input:focus,
    .form-group select:focus {
      border-color: #007bff;
      outline: none;
    }

    .stop-entry {
      margin-bottom: 15px;
      padding: 10px;
      background: #f9f9f9;
      border: 1px solid #ddd;
      border-radius: 5px;
    }

    .form-actions {
      text-align: center;
      margin-top: 20px;
    }

    .form-actions button {
      padding: 10px 20px;
      font-size: 16px;
      color: #fff;
      background-color: #007bff;
      border: none;
      border-radius: 4px;
      cursor: pointer;
      margin-right: 10px;
    }

    .form-actions button:hover {
      background-color: #0056b3;
    }

    .form-actions .add-stop-btn {
      background-color: #28a745;
    }

    .form-actions .add-stop-btn:hover {
      background-color: #218838;
    }

    @media (max-width: 480px) {
      .form-container {
        padding: 15px;
      }

      .form-actions button {
        width: 100%;
        margin-bottom: 10px;
      }

      .form-actions button:last-child {
        margin-bottom: 0;
      }
    }
  </style>
</head>
<body>
  <div class="form-container">
    <h1>Add Route</h1>
    <form  id="routeForm">
      <!-- Route Name -->
      <div class="form-group">
        <label for="routeName">Route Name:</label>
        <input type="text" id="routeName" name="routeName" required minlength="3" maxlength="50"  >
        <div id="route-name-error"></div>
      </div>

      <!-- Stops Section -->
      <div id="stops-container">
        <div class="stop-entry">
          <div class="form-group">
            <label for="placeId-1">Place:</label>
            <select id="placeId-1" class="stops" name="stops[0][placeId]" required>
              <% if(placeData && placeData.length > 0){ %>
                <% for(let i=0;i<placeData.length;i++){ %>
                  <option value="<%= placeData[i]._id %>"><%= placeData[i].place %>,<%= placeData[i].city %></option>
                <% } %>
              <% } %>
            </select>
            <span class="error-message-2"></span>
          </div>
          <div class="form-group">
            <label for="delay-1">Delay (minutes):</label>
            <input type="number" class="delay" id="delay-1" class="delay" name="stops[0][delay]" required>
            <span class="error-message-3" style="color: red;"></span>
          </div>
        </div>
      </div>

      <!-- Buttons -->
      <div class="form-actions">
        <button type="button" class="add-stop-btn" onclick="addStop()">Add Stop</button>
        <button type="submit">Submit</button>
      </div>
    </form>
  </div>

  <script>
    let stopCount = 1;
  
    function addStop() {
      const stopsContainer = document.getElementById('stops-container');
      const newStop = document.createElement('div');
      newStop.classList.add('stop-entry');
  
      newStop.innerHTML = `
        <div class="form-group">
          <label for="placeId-${stopCount + 1}">Place:</label>
          <select id="placeId-${stopCount + 1}" class="stops" name="stops[${stopCount}][placeId]" required>
            <% if(placeData && placeData.length > 0){ %>
                <% for(let i=0;i<placeData.length;i++){ %>
                  <option value="<%= placeData[i]._id %>"><%= placeData[i].place %>,<%= placeData[i].city %></option>
                <% } %>
              <% } %>
          </select>
          <span class="error-message-2"></span>
        </div>
        <div class="form-group">
          <label for="delay-${stopCount + 1}">Delay (minutes):</label>
          <input type="number" class="delay" id="delay-${stopCount + 1}" name="stops[${stopCount}][delay]" required>
          <span class="error-message-3" style="color: red;"></span>
        </div>
      `;
  
      stopsContainer.appendChild(newStop);
      stopCount++;
    }
  
    document.addEventListener("DOMContentLoaded", () => {
      document.getElementById("routeForm").addEventListener("submit", async (e) => {
        e.preventDefault();
  
        const routeName = document.getElementById("routeName").value.trim();
        const stopSelects = document.querySelectorAll(".stops");
        const routeNameError = document.getElementById("route-name-error");
        const delayTime = document.querySelectorAll(".delay")
  
        let isValid = true;
  
        // Validate all stop selects
        stopSelects.forEach((select) => {
          const errorSpan = select.nextElementSibling;
          if (select.value.trim() === "") {
            errorSpan.textContent = "Choose an option.";
            errorSpan.style.color = "red";
            select.style.border = "2px solid red";
            isValid = false;
          } else {
            errorSpan.textContent = "";
            select.style.border = "";
          }
        });

        delayTime.forEach((delay) =>{
          const spanError = delay.nextSibling;
          if(delay.value < 0){
            spanError.textContent = 'invalid time';
            spanError.style.color = "red";
            isValid = false
          }else{
            spanError.textContent = ''
          }
        })
  
        // Validate route name
        if (
          !routeName.match(
            /^[A-Za-z](?!.*([A-Za-z0-9/\s])\1{2})[A-Za-z0-9/\s]*$/
          )
        ) {
          isValid = false;
          routeNameError.innerHTML = "Invalid route name.";
          routeNameError.style.color = "red";
        } else {
          routeNameError.innerHTML = "";
        }
        
        
        if (!isValid) {
          e.preventDefault()
          return; // Prevent submission if the form is invalid
        }
  
        // Prepare form data
        const formData = new FormData(document.getElementById("routeForm"));
  
        const data = {
          routeName: formData.get("routeName"),
          stops: [],
        };
  
        stopSelects.forEach((select, index) => {
          const delay = document.querySelector(`#delay-${index + 1}`).value.trim();
          data.stops.push({
            placeId: select.value,
            delay: delay,
          });
        });
  
        // Send data using fetch
        try {
          const response = await fetch("/admin/add-route", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify(data),
          });
  
          if (response.ok) {
            alert("Route added successfully!");
            document.getElementById("routeForm").reset(); // Reset the form
          } else {
            const error = await response.json();
            alert(`Error: ${error.message}`);
          }
        } catch (err) {
          console.error("Error submitting form:", err);
          alert("Something went wrong. Please try again later.");
        }
      });
    });
  </script>
  
</body>
</html>
