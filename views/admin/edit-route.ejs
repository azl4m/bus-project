<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Route</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://kit.fontawesome.com/your-fontawesome-key.js" crossorigin="anonymous"></script>
</head>
<body>
<div class="container mt-5">
    <h2 class="text-center">Edit Route</h2>
    <form id="editRouteForm" action="/edit/<%= route._id %>" method="POST">
        <!-- Route Name -->
        <div class="mb-3">
            <label for="routeName" class="form-label">Route Name</label>
            <input type="text" class="form-control" id="routeName" name="routeName" value="<%= route.routeName %>" required>
        </div>

        <!-- Stops List -->
        <div class="mb-3">
            <label class="form-label">Stops</label>
            <ul class="list-group" id="stopsList">
                <% route.stops.forEach((stop, index) => { %>
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <span><%= stop.placeId.place %> - <%= stop.placeId.city %>&nbsp; | Delay: <%= stop.delay %> min</span>
                        <div>
                            <button type="button" class="btn btn-sm btn-warning editStop" 
                                data-place="<%= stop.placeId.place %>" 
                                data-city="<%= stop.placeId.city %>" 
                                data-bs-toggle="modal" 
                                data-delay="<%= stop.delay %>"
                                data-bs-target="#editStopModal">
                                Edit
                            </button>
                            <button type="button" class="btn btn-sm btn-danger deleteStop" data-index="<%= index %>">
                                Delete
                            </button>
                        </div>
                    </li>
                <% }); %>
            </ul>
        </div>

        <!-- Add Stop Button -->
        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addStopModal">
            Add Stop
        </button>

        <!-- Submit Button -->
        <button type="submit" class="btn btn-success">Save Changes</button>
    </form>
</div>

<!-- Add Stop Modal -->
<div class="modal fade" id="addStopModal" tabindex="-1" aria-labelledby="addStopModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addStopModalLabel">Add Stop</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addStopForm">
                    <div class="mb-3">
                        <label for="placeId" class="form-label">Place</label>
                        <select class="form-select" id="placeId" required>
                            <% places.forEach(place => { %>
                                <option value="<%= place._id %>"><%= place.place %> - <%= place.city %></option>
                            <% }); %>
                        </select> 
                    </div>
                    <div class="mb-3">
                        <label for="delayTime" class="form-label">Delay (minutes)</label>
                        <input type="number" class="form-control" id="delayTime" required min="1">
                    </div>
                    <button type="button" class="btn btn-primary" id="saveStop">Add</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- edit modal -->
<div class="modal fade" id="editStopModal" tabindex="-1" aria-labelledby="editStopModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editStopModalLabel">Edit stop</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addStopForm">
                    <div class="mb-3">
                        <label for="editPlaceId" class="form-label">Place</label>
                        <select class="form-select" id="EditplaceId" required>
                            <% places.forEach(place => { %>
                                <option value="<%= place._id %>"><%= place.place %> - <%= place.city %></option>
                            <% }); %>
                        </select> 
                    </div>
                    <div class="mb-3">
                        <label for="editDelayTime" class="form-label">Delay (minutes)</label>
                        <input type="number" class="form-control" id="editDelayTime" required min="1">
                    </div>
                    <button type="button" class="btn btn-primary" id="saveEdiStop">Add</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script>


document.addEventListener("DOMContentLoaded",()=>{

    let currentStopElement = null;
    const saveButton = document.getElementById("saveEdiStop");
    const editButtons = document.querySelectorAll(".editStop")
    const placeSelect = document.getElementById("EditplaceId");
    const delayInput = document.getElementById("editDelayTime");

    // Handle Edit Stop
    document.getElementById("stopsList").addEventListener("click", function (event) {
        if (event.target.classList.contains("editStop")) {
            // Get values from the clicked button's data attributes
            const selectedPlace = event.target.getAttribute("data-place");
            const selectedCity = event.target.getAttribute("data-city");
            const selectedDelay = event.target.getAttribute("data-delay");
            currentStopElement = event.target.closest("li")
            // Set the correct option in the select tag
            for (let option of placeSelect.options) {
                if (option.textContent.includes(selectedPlace) && option.textContent.includes(selectedCity)) {
                    option.selected = true;
                    break;
                }
            }

            // Set the delay input field
            delayInput.value = selectedDelay;
        }
    });

    saveButton.addEventListener("click", () => {
        console.log("inside save edit")
        if (!currentStopElement) return; // Ensure a stop is selected

        // Get new values
        const newPlace = placeSelect.options[placeSelect.selectedIndex].textContent;
        const newPlaceId = placeSelect.value;
        console.log(newPlaceId)
        const newDelay = delayInput.value;

        // Update the stop's text content
        currentStopElement.querySelector("span").textContent = `${newPlace} | Delay: ${newDelay} min`;

        // Close the modal (Bootstrap)
        const editModalElement = document.getElementById("editStopModal");
        const editModal = bootstrap.Modal.getInstance(editModalElement); 

        
        if (editModal) {
            editModal.hide(); // Hide the modal properly
        }
    });

    // Handle Add Stop Modal
    document.getElementById('saveStop').addEventListener('click', function() {
        let placeId = document.getElementById('placeId').value;
        let delayTime = document.getElementById('delayTime').value;
        const places = JSON.parse('<%- JSON.stringify(places) %>');
        const place =  places.find((place)=> place._id === placeId)
        console.log(place)
        if (!placeId || !delayTime || delayTime <= 0) {
            alert("Please enter valid stop details.");
            return;
        }

        // Add stop to the UI
        let stopList = document.getElementById('stopsList');
        let newListItem = document.createElement('li');
        newListItem.classList.add('list-group-item', 'd-flex', 'justify-content-between', 'align-items-center');
        newListItem.innerHTML = `
            <span>${place.place} - ${place.city} | Delay: ${delayTime} min</span>
            <div>
                <button type="button" class="btn btn-sm btn-warning editStop" 
                    data-bs-target="#editStopModal" 
                    data-bs-toggle="modal"
                    data-place="${place.place}" 
                    data-city="${place.city}" 
                    data-delay="${delayTime}"
                                
                >
                    Edit
                </button>
                <button type="button" class="btn btn-sm btn-danger deleteStop">
                    Delete
                </button>
            </div>
        `;
        stopList.appendChild(newListItem);

        // Close modal
        const addModalElement = document.getElementById("addStopModal");
        const addModal = bootstrap.Modal.getInstance(addModalElement); 

            
        if (addModal) {
            addModal.hide(); // Hide the modal properly
        }
        
    });

    // Handle Delete Stop
    document.addEventListener('click', function(event) {
        if (event.target.classList.contains('deleteStop')) {
            event.target.closest('li').remove();
        }
    });

    //formsubmition
    document.getElementById("editRouteForm").addEventListener("submit", async function (event) {
        event.preventDefault(); // Prevent default form submission
        // Frontend Validation
        console.log("inside form submisiion fech")
        const routeId = "<%= route._id %>"; // Get the route ID from EJS
        const routeName = document.getElementById("routeName").value;

        if (!routeName.trim()) {
            event.preventDefault();
            alert("Route Name is required!");
        }

        // Collect stops dynamically
        const stops = [];
        document.querySelectorAll("#stopsList li").forEach((li) => {
            const stopText = li.querySelector("span").textContent;
            console.log(stopText)
            const [place, delayText] = stopText.split(" | Delay: ");
            console.log(delayText)
            const delay = parseInt(delayText.replace(" min", ""), 10);

            // Find placeId based on text (requires mapping if needed)
            const placeId = Array.from(document.querySelectorAll("#EditplaceId option")).find(
                (opt) => opt.textContent.includes(place.trim())
            )?.value || "";

            stops.push({ placeId, delay });
        });

        // Prepare data
        const data = { routeName, stops };

        
        // Send data to the backend using fetch
        try {
            const response = await fetch(`/admin/edit-route`, {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(data),
            });

            console.log("after fetch")
            if (response.ok) {
                alert("Route updated successfully!");
                //location.reload(); // Refresh to reflect changes
            } else {
                alert("Failed to update route.");
            }
        } catch (error) {
            console.error("Error:", error);
            alert("An error occurred.");
        }
    });
})

</script>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
